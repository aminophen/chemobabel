%%
%% This is file `chemobabel.sty',
%% for generating chemical structural formulas using Open Babel and Inkscape.
%% 
%% Copyright 2014-2016 Acetaminophen (Hironobu YAMASHITA)
%%   Email   :  h.y.acetaminophen[a t]gmail.com
%%   GitHub  :  https://github.com/aminophen
%%   Blog    :  http://acetaminophen.hatenablog.com/
%%   Twitter :  @aminophen
%% 
%% This work is based on a lot of resources published online.
%%  - Noel O'Boyle http://baoilleach.blogspot.jp/
%%  - Jakob Lykke Andersen http://imada.sdu.dk/~jlandersen/
%%  - TeX Forum http://oku.edu.mie-u.ac.jp/tex/
%%
\NeedsTeXFormat{LaTeX2e}
\ProvidesPackage{chemobabel}
  [2016/02/28 v0.9d Chemical structures with Open Babel]

% Original source at http://imada.sdu.dk/~jlandersen/latex/graphvizObabel.sty
\RequirePackage{verbatim}
\RequirePackage{graphicx}

%% ----- Make a directory for images -----
\newcommand\chemobabelimgdir{chemobabelimgdir}
\@ifundefined{directlua}{%
  \immediate\write18{mkdir \chemobabelimgdir}%
}{%
  \directlua{os.execute[[mkdir \chemobabelimgdir]]}%
}

%% ----- Definition of \smilesobabel -----
\newcounter{smilesob@belCounter}
\setcounter{smilesob@belCounter}{1}
\newcommand\smilesob@belPrefix{\chemobabelimgdir/smilesobabelimg}
\newcommand\smilesob@belGetName{\smilesob@belPrefix\arabic{smilesob@belCounter}}

% 1: (optional) options for includegraphics
% 2: SMILES notation
% 3: options for obabel
\newcommand\smilesobabel[1][scale=1]{%
  \def\smilesobabel@next{\includegraphics[#1]}%
  \begingroup
  \let\do\@makeother
  \dospecials
  \catcode`\{=1
  \catcode`\}=2
  \@smilesobabel
}
\newcommand\@smilesobabel[2]{%
  \endgroup
  \@ifundefined{directlua}{%
    \immediate\write18{%
    obabel -:"#1" -O \smilesob@belGetName.svg #2 2>\smilesob@belGetName.log
    && inkscape -f \smilesob@belGetName.svg --export-\chemob@belExt,=\smilesob@belGetName.\chemob@belExt, 2>>\smilesob@belGetName.log
    || rm -f \smilesob@belGetName.\chemob@belExt,}%
  }{%
    \directlua{os.execute[[%
    obabel -:"#1" -O \smilesob@belGetName.svg #2 2>\smilesob@belGetName.log
    && inkscape -f \smilesob@belGetName.svg --export-\chemob@belExt,=\smilesob@belGetName.\chemob@belExt, 2>>\smilesob@belGetName.log
    || rm -f \smilesob@belGetName.\chemob@belExt,]]}%
  }%
  \IfFileExists{\smilesob@belGetName.\chemob@belExt,}{% the image exists: include it
    \smilesobabel@next{\smilesob@belGetName.\chemob@belExt,}%
  }{% the image was not created - show a warning and a hint
    \PackageWarning{chemobabel}{Processing of SMILES string failed}%
    \fbox{\begin{minipage}{0.9\textwidth}
      Warning in chemobabel: SMILES string was not processed. Remember to run \texttt{latex}
      (\texttt{pdflatex}, \texttt{platex}, etc.) with the \texttt{-shell-escape} option.\\
      \IfFileExists{\smilesob@belGetName.log}{%
        obabel log (might be empty):
        \verbatiminput{\smilesob@belGetName.log}%
      }{%
        No log file.%
      }%
    \end{minipage}}%
  }%
  \addtocounter{smilesob@belCounter}{1}% select next name
}
%% ----- Definition of \smilesobabel end -----

%% ----- Definition of \chemobabel -----
\newcounter{chemob@belCounter}
\setcounter{chemob@belCounter}{1}
\newcommand\chemob@belPrefix{\chemobabelimgdir/chemobabelimg}
\newcommand\chemob@belGetName{\chemob@belPrefix\arabic{chemob@belCounter}}

% 1: (optional) options for includegraphics
% 2: original files (.mol, .cdx, etc.)
% 3: options for obabel
\newcommand\chemobabel[1][scale=1]{%
  \def\chemobabel@next{\includegraphics[#1]}%
  \begingroup
  \let\do\@makeother
  \dospecials
  \catcode`\{=1
  \catcode`\}=2
  \@chemobabel
}
\newcommand\@chemobabel[2]{%
  \endgroup
  \IfFileExists{"#1"}{% the file exists: start processing (``#1'' can contain spaces, so ``"'' required)
    \@ifundefined{directlua}{%
      \immediate\write18{%
      obabel "#1" -O \chemob@belGetName.svg #2 2>\chemob@belGetName.log
      && inkscape -f \chemob@belGetName.svg --export-\chemob@belExt,=\chemob@belGetName.\chemob@belExt, 2>>\chemob@belGetName.log
      || rm -f \chemob@belGetName.\chemob@belExt,}%
    }{%
      \directlua{os.execute[[%
      obabel "#1" -O \chemob@belGetName.svg #2 2>\chemob@belGetName.log
      && inkscape -f \chemob@belGetName.svg --export-\chemob@belExt,=\chemob@belGetName.\chemob@belExt, 2>>\chemob@belGetName.log
      || rm -f \chemob@belGetName.\chemob@belExt,]]}%
    }%
    \IfFileExists{\chemob@belGetName.\chemob@belExt,}{% the image exists: include it
      \chemobabel@next{\chemob@belGetName.\chemob@belExt,}%
    }{% the image was not created - show a warning and a hint
      \PackageWarning{chemobabel}{Processing of file ``#1'' failed}%
      \fbox{\begin{minipage}{0.9\textwidth}
        Warning in chemobabel: the file was not processed. Remember to run \texttt{latex}
        (\texttt{pdflatex}, \texttt{platex}, etc.) with the \texttt{-shell-escape} option.\\
        \IfFileExists{\chemob@belGetName.log}{%
          obabel log (might be empty):
          \verbatiminput{\chemob@belGetName.log}%
        }{%
          No log file.%
        }%
      \end{minipage}}%
    }%
  }{% the file does not exist: show a std error
    \PackageError{chemobabel}{File ``#1'' not found}{}%
    \fbox{\begin{minipage}{0.9\textwidth}
      Error in chemobabel: the file ``#1'' does not exist.
    \end{minipage}}%
  }%
  \addtocounter{chemob@belCounter}{1}% select next name
}
%% ----- Definition of \chemobabel end -----

%% ----- Declaration of options -----
% load macros for extracting \chemobabel and \smilesobabel commands)
\DeclareOption{extract}{%
  \PackageWarningNoLine{chemobabel}{You are using [extract] option.\MessageBreak
                                    No chemical structures will be printed}
  \input{chemobabel-extract.tex}}
% define the image extension
\DeclareOption{pdf}{\def\chemob@belExt,{pdf}}
\DeclareOption{eps}{\def\chemob@belExt,{eps}}
\ExecuteOptions{pdf}
\ProcessOptions
%% ----- Declaration of options end -----

\endinput

%%
%% End of file `chemobabel.sty'.
