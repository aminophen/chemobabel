%
% This is file `chemobabel.sty',
% for generating chemical structural formulas
% using Open Babel and Inkscape.
%
% Copyright 2014-2018 Acetaminophen (Hironobu YAMASHITA)
%   Email   :  h.y.acetaminophen[a t]gmail.com
%   GitHub  :  https://github.com/aminophen
%   Blog    :  http://acetaminophen.hatenablog.com/
%   Twitter :  @aminophen
%
% This work is based on a lot of resources published online.
%  - Noel O'Boyle http://baoilleach.blogspot.jp/
%  - Jakob Lykke Andersen http://imada.sdu.dk/~jlandersen/
%  - TeX Forum http://oku.edu.mie-u.ac.jp/tex/
%

\NeedsTeXFormat{LaTeX2e}
\ProvidesPackage{chemobabel}
  [2018/01/23 v0.9g Chemical structures with Open Babel]

%% Start of package main code
%% Thanks: http://imada.sdu.dk/~jlandersen/latex/graphvizObabel.sty

\RequirePackage{verbatim}
\RequirePackage{graphicx}

%% ----- External command execution -----
\ifx\directlua\@undefined
  \def\chemob@bel@exec#1{\immediate\write18{#1}}
\else
  \def\chemob@bel@exec#1{\directlua{os.execute[[#1]]}}
\fi

%% ----- Make a directory for images -----
\newcommand\chemobabelimgdir{chemobabelimgdir}
\chemob@bel@exec{mkdir \chemobabelimgdir}

%% ----- Definition of external commands -----
\newcommand\smilesob@bel@obabelcmd[2]{obabel -:"#1" -O \smilesob@belGetName.svg #2}
\newcommand\chemob@bel@obabelcmd[2]{obabel "#1" -O \chemob@belGetName.svg #2}
\newcommand\chemob@bel@inkscapecmd[2]{inkscape -f #1.svg --export-#2=#1.#2}
\newcommand\chemob@bel@librsvgcmd[2]{rsvg-convert -f #2 -o #1.#2 #1.svg}

%% ----- Common part of \smilesobabel and \chemobabel -----
\def\chemob@bel@common@maybeimg#1#2#3{%
  \IfFileExists{#2.\chemob@belimgExt}{% the image exists: include it
    #1{#2.\chemob@belimgExt}%
  }{% the image was not created - show a warning and a hint
    \PackageWarning{chemobabel}{Processing of #3\space failed}%
    \fbox{\begin{minipage}{0.9\textwidth}
      Warning in chemobabel: #3\space was not processed.
      Remember to run \texttt{latex} (\texttt{pdflatex}, \texttt{platex}, etc.)
      with the \texttt{-shell-escape} option.\\
      \IfFileExists{#2.log}{%
        obabel log (might be empty):
        \verbatiminput{#2.log}%
      }{%
        No log file.%
      }%
    \end{minipage}}%
  }%
}
%% ----- Common part of \smilesobabel and \chemobabel end -----

%% ----- Definition of \smilesobabel -----
\newcounter{smilesob@belCounter}
\setcounter{smilesob@belCounter}{1}
\newcommand\smilesob@belPrefix{\chemobabelimgdir/smilesobabelimg}
\newcommand\smilesob@belGetName{\smilesob@belPrefix\arabic{smilesob@belCounter}}

% 1: (optional) options for includegraphics
% 2: SMILES notation
% 3: options for obabel
\newcommand\smilesobabel[1][scale=1]{%
  \def\smilesobabel@next{\includegraphics[#1]}%
  \begingroup
    \let\do\@makeother \dospecials \catcode`\{=1 \catcode`\}=2
    \@smilesobabel
}
\newcommand\@smilesobabel[2]{%
  \endgroup
  \chemob@bel@exec{%
    \smilesob@bel@obabelcmd{#1}{#2} 2>\smilesob@belGetName.log
    && \chemob@bel@svgtoimgcmd{\smilesob@belGetName}{\chemob@belimgExt} 2>>\smilesob@belGetName.log
    || rm -f \smilesob@belGetName.\chemob@belimgExt}%
  \chemob@bel@common@maybeimg{\smilesobabel@next}{\smilesob@belGetName}{SMILES string}%
  \addtocounter{smilesob@belCounter}{1}% select next name
}
%% ----- Definition of \smilesobabel end -----

%% ----- Definition of \chemobabel -----
\newcounter{chemob@belCounter}
\setcounter{chemob@belCounter}{1}
\newcommand\chemob@belPrefix{\chemobabelimgdir/chemobabelimg}
\newcommand\chemob@belGetName{\chemob@belPrefix\arabic{chemob@belCounter}}

% 1: (optional) options for includegraphics
% 2: original files (.mol, .cdx, etc.)
% 3: options for obabel
\newcommand\chemobabel[1][scale=1]{%
  \def\chemobabel@next{\includegraphics[#1]}%
  \begingroup
    \let\do\@makeother \dospecials \catcode`\{=1 \catcode`\}=2
    \@chemobabel
}
\newcommand\@chemobabel[2]{%
  \endgroup
  \IfFileExists{"#1"}{%
    % the file exists: start processing
    % (``#1'' can contain spaces, so ``"'' required)
    \chemob@bel@exec{%
      \chemob@bel@obabelcmd{#1}{#2} 2>\chemob@belGetName.log
      && \chemob@bel@svgtoimgcmd{\chemob@belGetName}{\chemob@belimgExt} 2>>\chemob@belGetName.log
      || rm -f \chemob@belGetName.\chemob@belimgExt}%
    \chemob@bel@common@maybeimg{\chemobabel@next}{\chemob@belGetName}{file ``#1''}%
  }{%
    % the file does not exist: show a std error
    \PackageError{chemobabel}{File ``#1'' not found}{}%
    \fbox{\begin{minipage}{0.9\textwidth}
      Error in chemobabel: the file ``#1'' does not exist.
    \end{minipage}}%
  }%
  \addtocounter{chemob@belCounter}{1}% select next name
}
%% ----- Definition of \chemobabel end -----

%% ----- Declaration of options -----
% load macros for extracting \chemobabel and \smilesobabel commands
\newif\ifchemob@bel@extract
\chemob@bel@extractfalse
\DeclareOption{extract}{\chemob@bel@extracttrue}
% define the image extension
\DeclareOption{pdf}{\def\chemob@belimgExt{pdf}}
\DeclareOption{eps}{\def\chemob@belimgExt{eps}}
% determine image conversion command
\DeclareOption{inkscape}{\def\chemob@bel@svgtoimgcmd{\chemob@bel@inkscapecmd}}
\DeclareOption{librsvg}{\def\chemob@bel@svgtoimgcmd{\chemob@bel@librsvgcmd}}
% default settings
\ExecuteOptions{pdf,inkscape}
\ProcessOptions
%% ----- Declaration of options end -----

%% ----- Exit this package now, if [extract] is not specified -----
\ifchemob@bel@extract\else
  \expandafter\endinput
\fi

%% Extracting all codes of Open Babel figures
%% Thanks: http://oku.edu.mie-u.ac.jp/tex/mod/forum/discuss.php?d=1411

\PackageWarningNoLine{chemobabel}{%
  You are using [extract] option.\MessageBreak
  No chemical structures will be printed}

%% ----- Define intermediate output file and load packages -----
\newwrite\ChemFigFile
\immediate\openout\ChemFigFile=ChemFigFile.tex\relax
\immediate\write\ChemFigFile{\string\documentclass{article}}
\immediate\write\ChemFigFile{\string\usepackage{graphicx}}
\immediate\write\ChemFigFile{\string\usepackage{chemobabel}}

%% ----- Read and write -----
\immediate\write\ChemFigFile{\string\begin{document}}
\AtEndDocument{%
  \immediate\write\ChemFigFile{\string\end{document}}%
  \immediate\closeout\ChemFigFile%
}
\renewcommand\smilesobabel{%
  \begingroup
  \let\do\@makeother
  \dospecials
  \catcode`\{=1
  \catcode`\}=2
  \@@smilesobabel
}
\newcommand\@@smilesobabel[3][scale=1]{%
  \endgroup
  \immediate\write\ChemFigFile{%
    \string\smilesobabel[#1]{#2}{#3}%
    \string\newpage}%
  [\smilesob@belGetName.\chemob@belimgExt]%
  \addtocounter{smilesob@belCounter}{1}}
\renewcommand\chemobabel{%
  \begingroup
  \let\do\@makeother
  \dospecials
  \catcode`\{=1
  \catcode`\}=2
  \@@chemobabel
}
\newcommand\@@chemobabel[3][scale=1]{%
  \endgroup
  \immediate\write\ChemFigFile{%
    \string\chemobabel[#1]{#2}{#3}%
    \string\newpage}%
  [\chemob@belGetName.\chemob@belimgExt]%
  \addtocounter{chemob@belCounter}{1}}
%% ----- Read and write end -----

\endinput

%%
%% End of file `chemobabel.sty'.
